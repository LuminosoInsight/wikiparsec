"""
A Python script that uses data from `langcodes` to generate a simple
Haskell lookup table of language names.
"""
import langcodes

table_languages = ['en', 'de']

header = """
-- This file is automatically generated using `scripts/make_language_table.py`.
module Data.LanguageNamesData where
languageData :: String
""".strip()

def main(out_filename):
    with open(out_filename, 'w', encoding='utf-8') as out:
        print(header, file=out)
        out.flush()
        out.write('languageData = "')
        for namelang in table_languages:
            used_names = set()
            names = langcodes.DB.query("select subtag, name from language_name where language=? order by name, entry_order", namelang)
            for code, name in names:
                assert (',' not in name), name
                if name not in used_names:
                    used_names.add(name)
                    out.write("%s,%s,%s" % (namelang, name, code))
                    # Write the literal characters \n, to be interpreted by
                    # Haskell
                    out.write(r'\n')
        out.write('"\n')


if __name__ == '__main__':
    main('LanguageNamesData.hs')
